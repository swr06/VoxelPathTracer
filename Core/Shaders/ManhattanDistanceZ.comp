#version 430 core

#define WORLD_SIZE_X 384
#define WORLD_SIZE_Y 128
#define WORLD_SIZE_Z 384


layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(r8, binding = 0) uniform image3D o_DistanceBuffer;


void WriteToDistBuffer(ivec3 loc, float val)
{
	imageStore(o_DistanceBuffer, loc, vec4(val / 255.0f));
}

float ReadFromDistBuffer(ivec3 loc)
{
	return floor(imageLoad(o_DistanceBuffer, loc).r * 255.0f);
}


void main()
{

	ivec3 Texel = ivec3(gl_GlobalInvocationID.xyz);
	int y = Texel.y;
	int x = Texel.x;

	const int MaxDistance = min(254, WORLD_SIZE_X + WORLD_SIZE_Y + WORLD_SIZE_Z);

    for (int z = 1; z < WORLD_SIZE_Z; z++)
	{
        if (ReadFromDistBuffer(ivec3(x, y, z-1)) < ReadFromDistBuffer(ivec3(x,y,z)))
		{
            WriteToDistBuffer(ivec3(x,y,z), 1 + ReadFromDistBuffer(ivec3(x,y,z-1)));
		}
	}

    for (int z = WORLD_SIZE_Z - 2; z >= 0; z--)
    {
        if (ReadFromDistBuffer(ivec3(x,y,z+1)) < ReadFromDistBuffer(ivec3(x,y,z)))
		{
            WriteToDistBuffer(ivec3(x,y,z), 1 + ReadFromDistBuffer(ivec3(x,y,z+1)));
		}
	}
}