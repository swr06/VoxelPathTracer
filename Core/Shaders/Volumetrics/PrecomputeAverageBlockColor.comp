#version 430 core

layout(local_size_x = 1, local_size_y = 1) in;

layout (std430, binding = 0) buffer SSBO_BlockData
{
    int BlockAlbedoData[128];
    int BlockNormalData[128];
    int BlockPBRData[128];
    int BlockEmissiveData[128];
	int BlockTransparentData[128];
};

layout (std430, binding = 1) buffer SSBO_BlockAverageData
{
    vec4 BlockAverageColorData[128];
};

uniform sampler2DArray u_BlockAlbedo;

void main() {

    for (int CurrentTexture = 0 ; CurrentTexture < 128 ; CurrentTexture++) {
        
        int AlbedoTexture = BlockAlbedoData[CurrentTexture];
        BlockAverageColorData[CurrentTexture].xyz = vec3(0.0f);
        BlockAverageColorData[CurrentTexture].w = 0.0f;

        if (AlbedoTexture >= 0)
        {
            vec3 AverageColor = vec3(0.0f);
            float Idx = float(AlbedoTexture);
            vec3 EstimatedAverageAlbedo = textureLod(u_BlockAlbedo, vec3(vec2(0.5f), AlbedoTexture), 8.0f).xyz +
		        textureLod(u_BlockAlbedo, vec3(vec2(0.25f), AlbedoTexture), 8.0f).xyz +
		        textureLod(u_BlockAlbedo, vec3(vec2(0.75f), AlbedoTexture), 8.0f).xyz + 
		        textureLod(u_BlockAlbedo, vec3(vec2(1.0f), AlbedoTexture), 8.0f).xyz +
		        textureLod(u_BlockAlbedo, vec3(vec2(0.0f), AlbedoTexture), 8.0f).xyz;

            EstimatedAverageAlbedo += textureLod(u_BlockAlbedo, vec3(vec2(0.5f), AlbedoTexture), 6.0f).xyz +
		        textureLod(u_BlockAlbedo, vec3(vec2(0.25f), AlbedoTexture), 6.5f).xyz +
		        textureLod(u_BlockAlbedo, vec3(vec2(0.75f), AlbedoTexture), 6.5f).xyz + 
		        textureLod(u_BlockAlbedo, vec3(vec2(1.0f), AlbedoTexture), 5.5f).xyz +
		        textureLod(u_BlockAlbedo, vec3(vec2(0.0f), AlbedoTexture), 5.5f).xyz;
           
            EstimatedAverageAlbedo /= 5.0f * 2.0f;
            EstimatedAverageAlbedo = pow(EstimatedAverageAlbedo, vec3(1.8f));
            BlockAverageColorData[CurrentTexture].xyz = EstimatedAverageAlbedo;
            BlockAverageColorData[CurrentTexture].w = 0.0f;
        }
    }
}